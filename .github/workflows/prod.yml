name: prod-release
on:
  pull_request:
    types:
      - closed
    branches:
      - main
    paths-ignore:
      - '**/**.md'
      - '.devcontainer/**'
  workflow_dispatch:
    inputs:
      run-manually:
        required: true
        type: boolean
        description: Run Job Manually

jobs:
  release:
    if: |
      github.event.pull_request.merged ||
      github.event.inputs.run-manually == 'true'
    name: prod-release
    runs-on: ubuntu-latest
    environment: prod
    concurrency: prod-release
    strategy:
      matrix:
        python-version: [3.9]
        os: [ubuntu-latest]
    steps:
      - name: Check out code from GitHub
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.IC_GITHUB_TOKEN }}
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry
      - name: Cache poetry dependencies
        uses: actions/cache@v2
        with:
          path: ~/.cache/pypoetry/virtualenvs
          key: ${{ runner.os }}-poetry-${{ hashFiles('poetry.lock') }}
      - name: Configure Poetry
        run: |
          poetry config virtualenvs.create false
      - name: Install package
        run: poetry install
      - name: Use Python Semantic Release to prepare release
        env:
          GH_TOKEN: ${{ secrets.IC_GITHUB_TOKEN }}
          REPOSITORY_USERNAME: __token__
          REPOSITORY_PASSWORD: ${{ secrets.PYPI_TOKEN }}
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          poetry run semantic-release publish -D commit_author="github-actions <actions@github.com>"
  test:
    if: |
      github.event.pull_request.merged ||
      github.event.inputs.run-manually == 'true'
    name: prod-test
    runs-on: ubuntu-latest
    needs: release
    strategy:
      matrix:
        python-version: ['3.9']
        os: [ubuntu-latest]
    steps:
      - name: Sleep for 120 seconds
        run: sleep 120s
        shell: bash
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Package
        run: |
          python -m pip install --upgrade pip
          python -m pip install instruqt-converter
      - name: Test instruqt_converter
        run: |
          convert --help
